{"version":3,"sources":["ToDoForm.jsx","ToDo.jsx","App.js","reportWebVitals.js","index.js"],"names":["ToDoForm","addTask","useState","inputValue","setInputValue","handleSubmit","e","preventDefault","onSubmit","type","value","placeholder","onChange","target","onKeyDown","key","ToDo","todo","removeTask","handleComplete","className","complete","onClick","id","text","App","array","setArray","filter","item","map","length","todoItem","newItem","Math","round","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAEaA,EAAW,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAAa,EAECC,mBAAS,IAFV,mBAE5BC,EAF4B,KAEhBC,EAFgB,KAI7BC,EAAe,SAAAC,GACjBA,EAAEC,iBACFN,EAAQE,GACRC,EAAc,KAOlB,OACI,uBAAMI,SAAUH,EAAhB,UACI,uBACII,KAAK,OACLC,MAAOP,EACPQ,YAAY,kFACZC,SAAU,SAAAN,GAAC,OAAIF,EAAcE,EAAEO,OAAOH,QACtCI,UAXW,SAAAR,GACN,UAAVA,EAAES,KAAiBV,EAAaC,MAY/B,+HCzBCU,EAAO,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,eACpC,OACI,sBAAmBC,UAAYH,EAAKI,SAAyB,gBAAd,YAA/C,UACI,qBAAKC,QAAS,kBAAMH,EAAeF,EAAKM,KAAKH,UAAWH,EAAKI,SAAW,gBAAkB,GAA1F,SACKJ,EAAKO,OAEV,qBAAKF,QAAS,kBAAMJ,EAAWD,EAAKM,KAAKH,UAAU,cAAnD,iBAJMH,EAAKM,K,MCsDRE,MAjDf,WAAgB,IAAD,EAEavB,mBAAS,IAFtB,mBAENwB,EAFM,KAECC,EAFD,KAePT,EAAa,SAAAK,GACjBI,EAAS,YAAID,EAAME,QAAO,SAAAC,GAAI,OAAIA,EAAKN,KAAOA,QAG1CJ,EAAiB,SAAAI,GACrBI,EAAS,YACJD,EAAMI,KAAI,SAAAb,GAAI,OACfA,EAAKM,KAAOA,EAAZ,2BAAqBN,GAArB,IAA2BI,UAAWJ,EAAKI,WAA3C,eAA2DJ,SAKjE,OACE,sBAAKG,UAAU,MAAf,UACE,iCACE,uGAAmBM,EAAMK,YAE3B,cAAC,EAAD,CAAU9B,QA5BE,SAAA+B,GACd,GAAGA,EAAU,CACX,IAAMC,EAAU,CACdV,GAAIW,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBZ,KAAMQ,EACNX,UAAU,GAEZM,EAAS,GAAD,mBAAKD,GAAL,CAAYO,SAuBlBP,EAAMI,KAAI,SAAAD,GACR,OACE,cAAC,EAAD,CAEEZ,KAAMY,EACNX,WAAYA,EACZC,eAAgBA,GAHXU,EAAKN,WChCTc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.01785e73.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nexport const ToDoForm = ({addTask}) => {\r\n\r\n    const [inputValue, setInputValue] = useState(''); \r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        addTask(inputValue);\r\n        setInputValue('');\r\n    }\r\n\r\n    const handleKeyPress = e => {\r\n        if(e.key === 'Enter') handleSubmit(e);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\" \r\n                value={inputValue}\r\n                placeholder=\"Введите задачу\"\r\n                onChange={e => setInputValue(e.target.value)}\r\n                onKeyDown={handleKeyPress}\r\n            />\r\n            <button>Добавить задачу</button>\r\n        </form>\r\n    )\r\n}","export const ToDo = ({todo, removeTask, handleComplete}) => {\r\n    return (\r\n        <div key={todo.id} className={!todo.complete ? 'item-todo' : 'todo-complete'}>\r\n            <div onClick={() => handleComplete(todo.id)} className={todo.complete ? 'text-complete' : ''}>\r\n                {todo.text}\r\n            </div>\r\n            <div onClick={() => removeTask(todo.id)} className='item-delete'>\r\n                +\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useState } from 'react';\nimport { ToDoForm } from './ToDoForm';\nimport { ToDo } from './ToDo';\nimport './App.css'\n \n \n\nfunction App() {\n\n  const [array, setArray] = useState([])\n\n  const addTask = todoItem => {\n    if(todoItem) {\n      const newItem = {\n        id: Math.round(Math.random() * 100),\n        text: todoItem,\n        complete: false\n      }\n      setArray([...array, newItem]);\n    }\n  }\n\n  const removeTask = id => {\n    setArray([...array.filter(item => item.id !== id)])\n  }\n\n  const handleComplete = id => {\n    setArray([\n      ...array.map(todo => (\n        todo.id === id ? {...todo, complete: !todo.complete} : {...todo}\n      ))\n    ])\n  }\n \n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Список задач: {array.length}</h1>\n      </header>\n      <ToDoForm addTask={addTask}/>\n      {\n        array.map(item => {\n          return (\n            <ToDo \n              key={item.id} \n              todo={item}\n              removeTask={removeTask}\n              handleComplete={handleComplete} \n            />\n          )\n        })\n      }\n    </div>  \n  ) \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}